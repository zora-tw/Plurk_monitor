name: Check Plurk and Notify

on:
  schedule:
    - cron: '7-59/15 * * * *'  # 從第 7 分鐘開始每 15 分鐘執行一次（套用 Asia/Taipei）
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-plurk:
    runs-on: ubuntu-latest

    steps:
      - name: 🌏 Set timezone to Asia/Taipei
        run: sudo ln -sf /usr/share/zoneinfo/Asia/Taipei /etc/localtime

      - name: 🕒 Print scheduled vs actual time (only for schedule)
        env:
          EVENT_NAME: ${{ github.event_name }}
        run: |
          echo "=== GitHub Actions 排程時間檢查（台灣時間） ==="
          ACTUAL_TIME=$(date '+%Y-%m-%d %H:%M:%S')
          if [ "$EVENT_NAME" = "schedule" ]; then
            MINUTE=$(date '+%M')
            HOUR=$(date '+%H')
            # 找出最近的排程分鐘（7, 22, 37, 52）
            MOD=$(( (MINUTE - 7) % 15 ))
            if [ "$MOD" -lt 0 ]; then MOD=$((MOD + 15)); fi
            EXPECTED_MINUTE=$(( MINUTE - MOD ))
            EXPECTED_TIME=$(date -d "$HOUR:$EXPECTED_MINUTE" '+%Y-%m-%d %H:%M:%S')
            DELAY_SEC=$(( $(date -d "$ACTUAL_TIME" +%s) - $(date -d "$EXPECTED_TIME" +%s) ))

            echo "🟢 實際執行時間（台灣）: $ACTUAL_TIME"
            echo "🕓 預期排程時間（台灣）: $EXPECTED_TIME"
            echo "⏱ 延遲秒數: $DELAY_SEC 秒"
            if [ "$DELAY_SEC" -gt 60 ]; then
              echo "⚠️ 執行有明顯延遲！"
            else
              echo "✅ 延遲在可接受範圍內"
            fi
          else
            echo "🧑‍💻 手動觸發（workflow_dispatch），略過延遲檢查"
            echo "🟢 執行時間（台灣）: $ACTUAL_TIME"
          fi

      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 📦 Install dependencies
        run: pip install requests requests_oauthlib

      - name: 🔐 Set environment variables
        run: echo "環境變數由 GitHub Secret 提供"
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
          PLURK_APP_KEY: ${{ secrets.PLURK_APP_KEY }}
          PLURK_APP_SECRET: ${{ secrets.PLURK_APP_SECRET }}
          PLURK_ACCESS_TOKEN: ${{ secrets.PLURK_ACCESS_TOKEN }}
          PLURK_ACCESS_TOKEN_SECRET: ${{ secrets.PLURK_ACCESS_TOKEN_SECRET }}

      - name: 🚀 Run Plurk Checker
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
          PLURK_APP_KEY: ${{ secrets.PLURK_APP_KEY }}
          PLURK_APP_SECRET: ${{ secrets.PLURK_APP_SECRET }}
          PLURK_ACCESS_TOKEN: ${{ secrets.PLURK_ACCESS_TOKEN }}
          PLURK_ACCESS_TOKEN_SECRET: ${{ secrets.PLURK_ACCESS_TOKEN_SECRET }}
        run: python check_plurk.py

      - name: 📌 Commit updated state
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .github/state/last_plurk.json
          git diff --staged --quiet || git commit -m "🔄 Update last Plurk state"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📤 Commit and push state
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .github/state/last_plurk.json
          git commit -m "🔄 Update last Plurk state" || echo "No changes to commit"
          git push origin HEAD
